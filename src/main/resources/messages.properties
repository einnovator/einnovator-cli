
cli.descr=\
Welcome to the EInnovator CLI (Command-Line Tool).\n\
Your super-duper CLI tool for Multi-Cluster/Multi-Cloud Kubernetes devops and micro-services development.

cli.service.descr=\
Type a name to get help on commands for that service:

## Global


global.ls.options = o=wide|yaml|json|raw,O
global.get.options = o=wide|yaml|json|raw,O
global.options.o = Output format
global.options.O = Named field set or comma-separated list of fields
global.set.options.o = Show current setting after operation

## Generic

generic=Generic commands:

generic.ls = List Resources
generic.cd = Change current default/parent resource
generic.pwd = Show current default/parent resources
generic.version = Show CLI version
generic.help = Show this help

## Devops Generic


devops.ls = List resources
devops.ls.descr = List Spaces (| Domain | Registry | Vcs) based on flags. Defaults to list Spaces.
devops.ls.options = n,c,d,r|reg,vcs|git,$global.ls.options
devops.ls.options.n = List Spaces
devops.ls.options.c = List Clusters
devops.ls.options.d = List Domains
devops.ls.options.r = List Registries
devops.ls.options.vcs = List Git Vcs
devops.ls.options.o = $global.options.o
devops.ls.options.O = $global.options.O

devops.ps = List Deployments (or Jobs or CronJobs) 
devops.ps.options = d,j,c,a,r
devops.ps.options.d = List Deployments
devops.ps.options.j = List Jobs
devops.ps.options.c = List CronJobs
devops.ps.options.a = List All (Deployment, Jobs, and CronJobs)
devops.ps.options.r = List only Deployments with status Running, and CronsJobs with status running/non-suspended

devops.kill = Stop or delete Deployment (or Job or CronJob)  
devops.kill.args = deployId
devops.kill.args.deployId = Identifier of Deployment/Job/CronJob (name | id | uuid)
devops.kill.options = j,c,f|rm|del,$global.ls.options
devops.kill.options.j = Kill Job
devops.kill.options.c = Kill CronJob
devops.kill.options.f = Delete on Cloud Manager and cluster.
devops.kill.options.n = $devops.space.idx
devops.kill.options.o = $global.options.o
devops.kill.options.O = $global.options.O
devops.kill.descr = \
By default delete Deployment in cluster only, and sets status to STOPPED.\n\
With option -f | --rm | --del it also deletes in Cloud Manager.\n\
Get Deployment after stop or list Deployments in same Space after delete, if output options -o|-O are specified.\n\
To stop/delete a Job use option -j; to stop/delete a CronJob use options -c.


devops.run = Create and run Deployment (or Job or CronJob)
devops.run.descr = To create and run a Job use prefix job: ; to create and schedule a CronJob use prefix cronjob:

devops.install = Install Solution (standalone or from Catalog)
devops.install.descr = To install from Catalog use qualified name catalog/solution

devops.cd = Change current Space
devops.cd.args= spaceId
devops.cd.args.spaceId= $devops.space.id
devops.cd.descr =\
If argument as format cluster/space changes cluster and space.\n\
If argument as format cluster/ changes cluster.\n\
If argument has format space change to space in current cluster.\n

devops.pwd = Show current default/parent resources
devops.pwd.descr = Show current resources: Cluster, Space, Domain, Registry, Catalog


#####################
## Cloud Manager Devops

devops = Cloud Manager Devops operations


## Cluster
devops.cluster = Cluster operations
devops.cluster.id = Identifier of Cluster (name | id | uuid)
devops.cluster.idx = Identifier of Cluster (name | id | uuid). Defaults to current Cluster, if not specified.

devops.cluster.ls = List Clusters
devops.cluster.ls.options = $global.ls.options
devops.cluster.ls.options.o = $global.options.o
devops.cluster.ls.options.O = $global.options.O

devops.cluster.get = Get Details of Cluster
devops.cluster.get.options = o=wide|yaml|json|raw

devops.cluster.view = View Cluster dashboard in web browser
devops.cluster.view.args = clusterId+
devops.cluster.view.args.clusterId = $devops.cluster.id
devops.cluster.view.descr =\
If clusterId is not specified, defaults to current Cluster if any.\n\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.cluster.create = Create/Import Cluster

devops.cluster.update = Update Cluster

devops.cluster.delete = Delete Cluster

devops.cluster.set = Set current Cluster

devops.cluster.unset = Unset current Cluster

devops.cluster.schema = Show attributes/properties of Cluster

devops.cluster.help = Show help on commands for Clusters

## Space

devops.space = Space operations
devops.space.id = Identifier of Space (cluster/name | name | id | uuid)
devops.space.idx = Identifier of Space (cluster/name | name | id | uuid). Defaults to current Space, if not specified.

devops.space.ls = List Spaces
devops.space.ls.options = $global.ls.options
devops.space.ls.options.o = $global.options.o
devops.space.ls.options.O = $global.options.O

devops.space.get = Get Details of Space
devops.space.get.options = o=wide|yaml|json|raw

devops.space.view = View Space dashboard in web browser
devops.space.view.args = spaceId+
devops.space.view.args.spaceId = $devops.space.id
devops.space.view.descr =\
If spaceId is not specified, defaults to current Space if any.\n\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.space.create = Create Space

devops.space.update = Update Space

devops.space.delete = Delete Space

devops.space.attach = Attach Space from Cluster

devops.space.set = Set current Space

devops.space.unset = Unset current Space

devops.space.schema = Show attributes/properties of Space

devops.space.help = Show help on commands for Spaces

## Deployment

devops.deployment = Deployment operations
devops.deployment.id = Identifier of Deployment (name | id | uuid)
devops.pod.id = Identifier of Pod (name | id | uuid)
devops.ipod.id = Identifier of instance/replica/pod (name | id | uuid)
devops.route.id = Identifier of Route (host | dns | id | uuid)
devops.route.name = Host of the Route
devops.route.ls.options= $global.ls.options
devops.route.get.options= $global.get.options
devops.mount.id = Identifier of Mount (name | id | uuid)
devops.mount.name = Name of the Mount
devops.mount.ls.options= $global.ls.options
devops.mount.get.options= $global.get.options
devops.var.id = Name of the environment variable
devops.env.ls.options= $global.ls.options
devops.env.get.options= $global.get.options

devops.binding.id = Identifier of Binding (name | id | uuid)
devops.binding.name = Name of the Binding
devops.binding.ls.options= $global.ls.options
devops.binding.get.options= $global.get.options
devops.connector.id = Identifier of Connector (name | id | uuid)
devops.connector.name = Name of the Connector
devops.connector.ls.options= $global.ls.options
devops.connector.get.options= $global.get.options

devops.deployment.ls = List Deployments in Space
devops.deployment.ls.options = n|ns,o=wide|yaml|json|raw,O=cicd
devops.deployment.ls.options.n = $devops.space.idx
devops.deployment.ls.options.o = $global.options.o
devops.deployment.ls.options.O = $global.options.O

devops.deployment.get = Get Details of Deployment
devops.deployment.get.args = deployId
devops.deployment.get.args.deployId = $devops.deployment.id
devops.deployment.get.options = n|ns,o=wide|yaml|json|raw,O=cicd
devops.deployment.get.options.n = $devops.space.idx
devops.deployment.get.options.o = $global.options.o
devops.deployment.get.options.O = $global.options.O

devops.deployment.view = View Deployment dashboard in web browser
devops.deployment.view.args = deployId
devops.deployment.view.args.deployId = $devops.deployment.id
devops.deployment.view.options = n|ns
devops.deployment.view.options.n = $devops.space.idx
devops.deployment.view.descr =\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.deployment.create = Create Deployment
devops.deployment.create.args = deployId
devops.deployment.create.args.deployId = $devops.deployment.id
devops.deployment.create.options = props=...++,$devops.deployment.get.options
devops.deployment.create.options.props = Key-value pairs for Deployment properties
devops.deployment.create.options.n = $devops.space.idx
devops.deployment.create.options.o = $global.options.o
devops.deployment.create.options.O = $global.options.O
devops.deployment.create.descr = Create Deployment with specified name and properties.\n\
Get/show is done after creation, if output options -o|-O are specified.

devops.deployment.update = Update Deployment
devops.deployment.update.args = deployId
devops.deployment.update.args.deployId = $devops.deployment.id
devops.deployment.update.options = props=...++,$devops.deployment.get.options
devops.deployment.update.options.props = Key-value pairs for Deployment properties
devops.deployment.update.options.n = $devops.space.idx
devops.deployment.update.options.o = $global.options.o
devops.deployment.update.options.O = $global.options.O
devops.deployment.update.descr = Update properties of Deployment with specified id.\n\
Get/show Deployments after update, if output options -o|-O are specified.

devops.deployment.delete = Delete Deployment
devops.deployment.delete.args = deployId
devops.deployment.delete.args.deployId = $devops.deployment.id
devops.deployment.delete.options = $devops.deployment.ls.options
devops.deployment.delete.options.n = $devops.space.idx
devops.deployment.delete.options.o = $global.options.o
devops.deployment.delete.options.O = $global.options.O
devops.deployment.delete.descr = \
Update properties of Deployment with specified id.\n\
List Deployments in same Space after delete, if output options -o|-O are specified.


devops.deployment.scale = Scale instance/replica/pod count of Deployment
devops.deployment.scale.args = deployId,count+
devops.deployment.scale.args.deployId = $devops.deployment.id
devops.deployment.scale.args.count = Number of instance/replica/pod to scale
devops.deployment.scale.options = k|replicas|instances,$devops.deployment.get.options
devops.deployment.scale.options.k = Number of instance/replica/pod to scale
devops.deployment.scale.options.n = $devops.space.idx
devops.deployment.scale.options.o = $global.options.o
devops.deployment.scale.options.O = $global.options.O
devops.deployment.scale.descr = \
Scale number of instance/replica/pod count of Deployment.\n\
If current number is lower, create new instance.\n\
If current number is higher, shutdown excess instances.\n\
Get/show Deployment after scaling, if output options -o|-O are specified.

devops.deployment.resources = Scale resources of Deployment
devops.deployment.resources.args = deployId
devops.deployment.resources.args.deployId = $devops.deployment.id
devops.deployment.resources.options = m|mem,d|disk|storage,$devops.deployment.get.options
devops.deployment.resources.options.m = Memory size (units Gi|G|Mi|M)
devops.deployment.resources.options.d = Ephemeral Disk/Storage size (units Gi|G)
devops.deployment.resources.options.n = $devops.space.idx
devops.deployment.resources.options.o = $global.options.o
devops.deployment.resources.options.O = $global.options.O
devops.deployment.resources.descr = \
Scale memory and ephemeral storage resources of Deployment.\n\
New pods are created with new resource settings, and existing pods are shutdown.\n\
Get/show Deployment after update, if output options -o|-O are specified.

devops.deployment.start = Start a Deployment
devops.deployment.start.args = deployId
devops.deployment.start.args.deployId = $devops.deployment.id
devops.deployment.start.args = deployId
devops.deployment.start.args.deployId = $devops.deployment.id
devops.deployment.start.options =  $devops.deployment.get.options
devops.deployment.start.options.n = $devops.space.idx
devops.deployment.start.options.o = $global.options.o
devops.deployment.start.options.O = $global.options.O
devops.deployment.start.descr = \
Start a Deployment.\n\
Get/show Deployment after start, if output options -o|-O are specified.

devops.deployment.stop = Stop a Deployment
devops.deployment.stop.args = deployId
devops.deployment.stop.args.deployId = $devops.deployment.id
devops.deployment.stop.args = deployId
devops.deployment.stop.args.deployId = $devops.deployment.id
devops.deployment.stop.options =  $devops.deployment.get.options
devops.deployment.stop.options.n = $devops.space.idx
devops.deployment.stop.options.o = $global.options.o
devops.deployment.stop.options.O = $global.options.O
devops.deployment.stop.descr = \
Stop a Deployment.\n\
Get/show Deployment after stop, if output options -o|-O are specified.

devops.deployment.restart = Restart a Deployment
devops.deployment.restart.args = deployId
devops.deployment.restart.args.deployId = $devops.deployment.id
devops.deployment.restart.args = deployId
devops.deployment.restart.args.deployId = $devops.deployment.id
devops.deployment.restart.options =  $devops.deployment.get.options
devops.deployment.restart.options.n = $devops.space.idx
devops.deployment.restart.options.o = $global.options.o
devops.deployment.restart.options.O = $global.options.O
devops.deployment.restart.descr = \
Stop a Deployment.\n\
Get/show Deployment after restart, if output options -o|-O are specified.

devops.deployment.sync = Synchronize Deployment state/details from the cluster
devops.deployment.sync.args = deployId
devops.deployment.sync.args.deployId = $devops.deployment.id
devops.deployment.sync.args = deployId
devops.deployment.sync.args.deployId = $devops.deployment.id
devops.deployment.sync.options =  $devops.deployment.get.options
devops.deployment.sync.options.n = $devops.space.idx
devops.deployment.sync.options.o = $global.options.o
devops.deployment.sync.options.O = $global.options.O
devops.deployment.sync.descr = \
Synchronize Deployment state/details from the cluster.\n\
Get/show Deployment after sync, if output options -o|-O are specified.


devops.deployment.attach = Attach a Deployment from the cluster
devops.deployment.attach.args = deployId
devops.deployment.attach.args.deployId = $devops.deployment.id
devops.deployment.attach.options =  $devops.deployment.get.options
devops.deployment.attach.options.n = $devops.space.idx
devops.deployment.attach.options.o = $global.options.o
devops.deployment.attach.options.O = $global.options.O
devops.deployment.attach.descr = \
Attach a Deployment from the cluster.\n\
Get/show Deployment after attach, if output options -o|-O are specified.


devops.deployment.exec = Execute command on instance/replica/pod of Deployment
devops.deployment.exec.args = deployId,podId
devops.deployment.exec.args.deployId = $devops.deployment.id
devops.deployment.exec.args.podId = $devops.ipod.id
devops.deployment.exec.options =  $devops.deployment.get.options
devops.deployment.exec.options.n = $devops.space.idx
devops.deployment.exec.options.o = $global.options.o
devops.deployment.exec.options.O = $global.options.O
devops.deployment.exec.descr = \
Execute command on instance/replica/pod of Deployment.\n\
If pod is not specified, the first pod is considered.\n\
Get/show Deployment after attach, if output options -o|-O are specified.

devops.deployment.logs = View logs of instance/replica/pod of Deployment
devops.deployment.logs.args = deployId,podId
devops.deployment.logs.args.deployId = $devops.deployment.id
devops.deployment.logs.args.podId = $devops.ipod.id
devops.deployment.logs.options =  $devops.deployment.get.options
devops.deployment.logs.options.n = $devops.space.idx
devops.deployment.logs.options.o = $global.options.o
devops.deployment.logs.options.O = $global.options.O
devops.deployment.logs.descr = \
View logs of instance/replica/pod of Deployment.\n\
If pod is not specified, the first pod is considered.\n\
Get/show Deployment after attach, if output options -o|-O are specified.

devops.deployment.go = Open web-browser in URL of primary Route of Deployment
devops.deployment.go.args = deployId
devops.deployment.go.args.deployId = $devops.deployment.id
devops.deployment.go.options = $global.ls.options
devops.deployment.go.options.n = $devops.space.idx
devops.deployment.go.descr =\
Primary route is the one is flag primary, or the first one if none is marked as primary.\n\
Requires environment where a default web-browser is configured and can be started/open.

devops.deployment.schema = Show attributes/properties of Deployment

devops.deployment.help = Show help on commands for Deployments

# Deployment instance/replica/pods

devops.deployment.pod = Operations on instances/replicas/pods of Deployment

devops.deployment.pod.ls = List instances/replicas/pods of Deployment
devops.deployment.pod.ls.args = deployId
devops.deployment.pod.ls.args.deployId = $devops.deployment.id
devops.deployment.logs.descr = \
List instances/replicas/pods of Deployment.\n\

devops.deployment.pod.kill = Kill instance/replica/pod of Deployment
devops.deployment.pod.kill.args = deployId,podId
devops.deployment.pod.kill.args.deployId = $devops.deployment.id
devops.deployment.pod.kill.args.podId = $devops.ipod.id
devops.deployment.pod.kill..descr = \
Kill instance/replica/pod of Deployment.\n\
If pod is not specified, the first pod is considered.\n\
Get/show Deployment after kill, if output options -o|-O are specified.

devops.deployment.pod.help = Show help on commands for Deployments Pods

## Deployment Route

devops.deployment.route = Deployment Routes operations

devops.deployment.route.ls = List Routes of Deployment
devops.deployment.route.ls.args = deployId
devops.deployment.route.ls.args.deployId = $devops.deployment.id
devops.deployment.route.ls.options = $global.ls.options
devops.deployment.route.ls.options.n = $devops.space.idx
devops.deployment.route.ls.options.o = $global.options.o
devops.deployment.route.ls.options.O = $global.options.O

devops.deployment.route.get = Get Route of Deployment
devops.deployment.route.get.args = deployId,routeId
devops.deployment.route.get.args.deployId = $devops.deployment.id
devops.deployment.route.get.args.routeId = $devops.route.id

devops.deployment.route.add = Add Route to Deployment
devops.deployment.route.add.args = deployId,routeId,props=...++
devops.deployment.route.add.args.deployId = $devops.deployment.id
devops.deployment.route.add.args.routeId = $devops.route.name
devops.deployment.route.add.options = d,props=...++
devops.deployment.route.add.options.d = $devops.domain.idx
devops.deployment.route.add.options.props = Key-value pairs for Route properties
devops.deployment.route.add.descr =\
Add Route to Deployment with specified host and properties.\n\
Option -d specified Domain. Defaults to current Domain.\n\
A Kubernetes ingress is created for the Route.\n\
If --sharedIngress=true is specified a common ingress is used.\n\
If domain uses TLS, a secret is created for the certificate.\n\
Get/show is done after create, if output options -o|-O are specified.

devops.deployment.route.update = Update Route of Deployment
devops.deployment.route.update.args = deployId,routeId
devops.deployment.route.update.args.deployId = $devops.deployment.id
devops.deployment.route.update.args.routeId = $devops.route.id
devops.deployment.route.update.options = d,props=...++,$devops.deployment.get.options
devops.deployment.route.update.options.d = $devops.domain.idx
devops.deployment.route.update.options.props = $devops.deployment.route.add.options.props
devops.deployment.route.update.options.n = $devops.space.idx
devops.deployment.route.update.options.o = $global.options.o
devops.deployment.route.update.options.O = $global.options.O
devops.deployment.route.update.descr =\
Update properties of Route of Deployment with specified id.\n\
Option -d specified Domain. Defaults to current Domain.\n\
Get/show is done after update, if output options -o|-O are specified.

devops.deployment.route.delete = Delete Route of Deployment
devops.deployment.route.delete.args = deployId,routeId
devops.deployment.route.delete.args.deployId = $devops.deployment.id
devops.deployment.route.delete.args.routeId = $devops.route.id
devops.deployment.route.delete.options = $devops.route.ls.options
devops.deployment.route.delete.options.n = $devops.space.idx
devops.deployment.route.delete.options.o = $global.options.o
devops.deployment.route.delete.options.O = $global.options.O
devops.deployment.route.delete.descr =\
Delete Route of Deployment with specified id.\n\
List is done after delete, if output options -o|-O are specified.

devops.deployment.route.go = Open Route URL in web-browser
devops.deployment.route.go.args = deployId,routeId
devops.deployment.route.go.args.deployId = $devops.deployment.id
devops.deployment.route.go.args.routeId = $devops.route.id
devops.deployment.route.go.options = $devops.route.ls.options
devops.deployment.route.go.options.n = $devops.space.idx
devops.deployment.route.go.options.o = $global.options.o
devops.deployment.route.go.options.O = $global.options.O
devops.deployment.route.go.descr =\
Requires environment where a default web-browser is configured and can be started/open.

devops.deployment.route.schema = Show attributes/properties of Route
devops.deployment.route.help = Show help on commands for Deployment Routes


## Route (short-cut)

devops.route = $devops.deployment.route

devops.route.ls = $devops.deployment.route.ls 
devops.route.ls.args = $devops.deployment.route.ls.args 
devops.route.ls.args.deployId = $devops.deployment.route.ls.args.deployId
devops.route.ls.options = $devops.deployment.route.ls.options
devops.route.ls.options.n = $devops.deployment.route.ls.options.n 
devops.route.ls.options.o = $devops.deployment.route.ls.options.o
devops.route.ls.options.O = $devops.deployment.route.ls.options.o

devops.route.get = $devops.deployment.route.get
devops.route.get.args = $devops.deployment.route.get.args
devops.route.get.args.deployId = $devops.deployment.route.get.args.deployId
devops.route.get.args.routeId = $devops.deployment.route.get.args.routeId

devops.route.add = $devops.deployment.route.add
devops.route.add.args = $devops.deployment.route.add.args
devops.route.add.args.deployId = $devops.deployment.route.add.args.deployId
devops.route.add.args.routeId = $devops.deployment.route.add.args.routeId
devops.route.add.options = $devops.deployment.route.add.options
devops.route.add.options.d = $devops.deployment.route.add.options.d
devops.route.add.options.props = $devops.deployment.route.add.options.props
devops.route.add.descr = $devops.deployment.route.add.descr

devops.route.update = $devops.deployment.route.update
devops.route.update.args = $devops.deployment.route.update.args
devops.route.update.args.deployId = $devops.deployment.route.update.args.deployId
devops.route.update.args.routeId = $devops.deployment.route.update.args.routeId
devops.route.update.options = $devops.deployment.route.update.options
devops.route.update.options.d = $devops.deployment.route.update.options.d
devops.route.update.options.props = $devops.deployment.route.update.options.props
devops.route.update.options.n = $devops.deployment.route.update.options.n
devops.route.update.options.o = $devops.deployment.route.update.options.o
devops.route.update.options.O = $devops.deployment.route.update.options.O
devops.route.update.descr = $devops.deployment.route.update.descr

devops.route.delete = $devops.deployment.route.delete
devops.route.delete.args = $devops.deployment.route.delete.args
devops.route.delete.args.deployId = $devops.deployment.route.delete.args.deployId
devops.route.delete.args.routeId = $devops.deployment.route.delete.args.routeId
devops.route.delete.options = $devops.deployment.route.delete.options
devops.route.delete.options.n = $devops.deployment.route.delete.options.n
devops.route.delete.options.o = $devops.deployment.route.delete.options.o
devops.route.delete.options.O = $devops.deployment.route.delete.options.O
devops.route.delete.descr = $devops.deployment.route.delete.descr

devops.route.go = $devops.deployment.route.go
devops.route.go.args = $devops.deployment.route.go.args
devops.route.go.args.deployId = $devops.deployment.route.go.args.deployId
devops.route.go.args.routeId = $devops.deployment.route.go.args.routeId
devops.route.go.options = $devops.deployment.route.go.options
devops.route.go.options.n = $devops.deployment.route.go.options.n
devops.route.go.options.o = $devops.deployment.route.go.options.o
devops.route.go.options.O = $devops.deployment.route.go.options.O
devops.route.go.descr = $devops.deployment.route.go.descr

devops.route.schema = $devops.deployment.route.schema
devops.route.help = $devops.deployment.route.help


# Deployment Mount

devops.deployment.mount = Deployment Mounts operations

devops.deployment.mount.ls = List Mounts of Deployment
devops.deployment.mount.ls.args = deployId
devops.deployment.mount.ls.args.deployId = $devops.deployment.id
devops.deployment.mount.ls.options = $global.ls.options
devops.deployment.mount.ls.options.n = $devops.space.idx
devops.deployment.mount.ls.options.o = $global.options.o
devops.deployment.mount.ls.options.O = $global.options.O

devops.deployment.mount.get = Get Mount of Deployment
devops.deployment.mount.get.args = deployId,mountId
devops.deployment.mount.get.args.deployId = $devops.deployment.id
devops.deployment.mount.get.args.mountId = $devops.mount.id

devops.deployment.mount.add = Add Mount to Deployment
devops.deployment.mount.add.args = deployId,mountId,props=...++
devops.deployment.mount.add.args.deployId = $devops.deployment.id
devops.deployment.mount.add.args.mountId = $devops.mount.name
devops.deployment.mount.add.options = props=...++
devops.deployment.mount.add.options.props = Key-value pairs for Mount properties
devops.deployment.mount.add.descr =\
Add Mount to Deployment with specified host and properties.\n\
Get/show is done after create, if output options -o|-O are specified.

devops.deployment.mount.update = Update Mount of Deployment
devops.deployment.mount.update.descr =\
Update properties of Mount of Deployment with specified id.\n\
Get/show is done after update, if output options -o|-O are specified.
devops.deployment.mount.update.args = deployId,mountId
devops.deployment.mount.update.args.deployId = $devops.deployment.id
devops.deployment.mount.update.args.mountId = $devops.mount.id
devops.deployment.mount.update.options = props=...++,$devops.deployment.get.options
devops.deployment.mount.update.options.props = $devops.deployment.mount.add.options.props
devops.deployment.mount.update.options.n = $devops.space.idx
devops.deployment.mount.update.options.o = $global.options.o
devops.deployment.mount.update.options.O = $global.options.O

devops.deployment.mount.delete = Delete Mount of Deployment
devops.deployment.mount.delete.args = deployId,mountId
devops.deployment.mount.delete.args.deployId = $devops.deployment.id
devops.deployment.mount.delete.args.mountId = $devops.mount.id
devops.deployment.mount.delete.options = $devops.mount.ls.options
devops.deployment.mount.delete.options.n = $devops.space.idx
devops.deployment.mount.delete.options.o = $global.options.o
devops.deployment.mount.delete.options.O = $global.options.O
devops.deployment.mount.delete.descr =\
Delete Mount of Deployment with specified id.\n\
List is done after delete, if output options -o|-O are specified.

devops.deployment.mount.schema = Show attributes/properties of Mount
devops.deployment.mount.help = Show help on commands for Deployment Mounts


# Deployment Environment Variables

devops.deployment.env = Deployment Environment Variables operations

devops.deployment.env.ls = List Environment Variables of Deployment
devops.deployment.env.ls.args = deployId
devops.deployment.env.ls.args.deployId = $devops.deployment.id
devops.deployment.env.ls.options = $global.ls.options
devops.deployment.env.ls.options.n = $devops.space.idx
devops.deployment.env.ls.options.o = $global.options.o
devops.deployment.env.ls.options.O = $global.options.O

devops.deployment.env.get = Get Environment Variable of Deployment
devops.deployment.env.get.args = deployId,envId
devops.deployment.env.get.args.deployId = $devops.deployment.id
devops.deployment.env.get.args.envId = $devops.env.id

devops.deployment.env.add = Add Environment Variable to Deployment
devops.deployment.env.add.args = deployId,envId,props=...++
devops.deployment.env.add.args.deployId = $devops.deployment.id
devops.deployment.env.add.args.envId = $devops.env.name
devops.deployment.env.add.options = props=...++
devops.deployment.env.add.options.props = Key-value pairs for Environment Variable properties
devops.deployment.env.add.descr =\
Add Environment Variable to Deployment with specified host and properties.\n\
Get/show is done after create, if output options -o|-O are specified.

devops.deployment.env.update = Update Environment Variable of Deployment
devops.deployment.env.update.descr =\
Update properties of Environment Variable of Deployment with specified id.\n\
Get/show is done after update, if output options -o|-O are specified.
devops.deployment.env.update.args = deployId,envId
devops.deployment.env.update.args.deployId = $devops.deployment.id
devops.deployment.env.update.args.envId = $devops.env.id
devops.deployment.env.update.options = props=...++,$devops.deployment.get.options
devops.deployment.env.update.options.props = $devops.deployment.env.add.options.props
devops.deployment.env.update.options.n = $devops.space.idx
devops.deployment.env.update.options.o = $global.options.o
devops.deployment.env.update.options.O = $global.options.O

devops.deployment.env.delete = Delete Environment Variable of Deployment
devops.deployment.env.delete.args = deployId,envId
devops.deployment.env.delete.args.deployId = $devops.deployment.id
devops.deployment.env.delete.args.envId = $devops.env.id
devops.deployment.env.delete.options = $devops.env.ls.options
devops.deployment.env.delete.options.n = $devops.space.idx
devops.deployment.env.delete.options.o = $global.options.o
devops.deployment.env.delete.options.O = $global.options.O
devops.deployment.env.delete.descr =\
Delete Environment Variable of Deployment with specified id.\n\
List is done after delete, if output options -o|-O are specified.

devops.deployment.env.schema = Show attributes/properties of Environment Variable
devops.deployment.env.help = Show help on commands for Deployment Environment Variables

# Deployment Bindings


devops.deployment.binding = Deployment Bindings operations

devops.deployment.binding.ls = List Bindings of Deployment
devops.deployment.binding.ls.args = deployId
devops.deployment.binding.ls.args.deployId = $devops.deployment.id
devops.deployment.binding.ls.options = $global.ls.options
devops.deployment.binding.ls.options.n = $devops.space.idx
devops.deployment.binding.ls.options.o = $global.options.o
devops.deployment.binding.ls.options.O = $global.options.O

devops.deployment.binding.get = Get Binding of Deployment
devops.deployment.binding.get.args = deployId,bindingId
devops.deployment.binding.get.args.deployId = $devops.deployment.id
devops.deployment.binding.get.args.bindingId = $devops.binding.id

devops.deployment.binding.add = Add Binding to Deployment
devops.deployment.binding.add.args = deployId,bindingId,props=...++
devops.deployment.binding.add.args.deployId = $devops.deployment.id
devops.deployment.binding.add.args.bindingId = $devops.binding.name
devops.deployment.binding.add.options = props=...++
devops.deployment.binding.add.options.props = Key-value pairs for Binding properties
devops.deployment.binding.add.descr =\
Add Binding to Deployment with specified host and properties.\n\
Get/show is done after create, if output options -o|-O are specified.

devops.deployment.binding.update = Update Binding of Deployment
devops.deployment.binding.update.descr =\
Update properties of Binding of Deployment with specified id.\n\
Get/show is done after update, if output options -o|-O are specified.
devops.deployment.binding.update.args = deployId,bindingId
devops.deployment.binding.update.args.deployId = $devops.deployment.id
devops.deployment.binding.update.args.bindingId = $devops.binding.id
devops.deployment.binding.update.options = props=...++,$devops.deployment.get.options
devops.deployment.binding.update.options.props = $devops.deployment.binding.add.options.props
devops.deployment.binding.update.options.n = $devops.space.idx
devops.deployment.binding.update.options.o = $global.options.o
devops.deployment.binding.update.options.O = $global.options.O

devops.deployment.binding.delete = Delete Binding of Deployment
devops.deployment.binding.delete.args = deployId,bindingId
devops.deployment.binding.delete.args.deployId = $devops.deployment.id
devops.deployment.binding.delete.args.bindingId = $devops.binding.id
devops.deployment.binding.delete.options = $devops.binding.ls.options
devops.deployment.binding.delete.options.n = $devops.space.idx
devops.deployment.binding.delete.options.o = $global.options.o
devops.deployment.binding.delete.options.O = $global.options.O
devops.deployment.binding.delete.descr =\
Delete Binding of Deployment with specified id.\n\
List is done after delete, if output options -o|-O are specified.

devops.deployment.binding.schema = Show attributes/properties of Binding
devops.deployment.binding.help = Show help on commands for Deployment Bindings



# Deployment Connectors


devops.deployment.connector = Deployment Connectors operations

devops.deployment.connector.ls = List Connectors of Deployment
devops.deployment.connector.ls.args = deployId
devops.deployment.connector.ls.args.deployId = $devops.deployment.id
devops.deployment.connector.ls.options = $global.ls.options
devops.deployment.connector.ls.options.n = $devops.space.idx
devops.deployment.connector.ls.options.o = $global.options.o
devops.deployment.connector.ls.options.O = $global.options.O

devops.deployment.connector.get = Get Connector of Deployment
devops.deployment.connector.get.args = deployId,connectorId
devops.deployment.connector.get.args.deployId = $devops.deployment.id
devops.deployment.connector.get.args.connectorId = $devops.connector.id

devops.deployment.connector.add = Add Connector to Deployment
devops.deployment.connector.add.args = deployId,connectorId,props=...++
devops.deployment.connector.add.args.deployId = $devops.deployment.id
devops.deployment.connector.add.args.connectorId = $devops.connector.name
devops.deployment.connector.add.options = props=...++
devops.deployment.connector.add.options.props = Key-value pairs for Connector properties
devops.deployment.connector.add.descr =\
Add Connector to Deployment with specified host and properties.\n\
Get/show is done after create, if output options -o|-O are specified.

devops.deployment.connector.update = Update Connector of Deployment
devops.deployment.connector.update.descr =\
Update properties of Connector of Deployment with specified id.\n\
Get/show is done after update, if output options -o|-O are specified.
devops.deployment.connector.update.args = deployId,connectorId
devops.deployment.connector.update.args.deployId = $devops.deployment.id
devops.deployment.connector.update.args.connectorId = $devops.connector.id
devops.deployment.connector.update.options = props=...++,$devops.deployment.get.options
devops.deployment.connector.update.options.props = $devops.deployment.connector.add.options.props
devops.deployment.connector.update.options.n = $devops.space.idx
devops.deployment.connector.update.options.o = $global.options.o
devops.deployment.connector.update.options.O = $global.options.O

devops.deployment.connector.delete = Delete Connector of Deployment
devops.deployment.connector.delete.args = deployId,connectorId
devops.deployment.connector.delete.args.deployId = $devops.deployment.id
devops.deployment.connector.delete.args.connectorId = $devops.connector.id
devops.deployment.connector.delete.options = $devops.connector.ls.options
devops.deployment.connector.delete.options.n = $devops.space.idx
devops.deployment.connector.delete.options.o = $global.options.o
devops.deployment.connector.delete.options.O = $global.options.O
devops.deployment.connector.delete.descr =\
Delete Connector of Deployment with specified id.\n\
List is done after delete, if output options -o|-O are specified.

devops.deployment.connector.schema = Show attributes/properties of Connector
devops.deployment.connector.help = Show help on commands for Deployment Connectors

# Deployment Job

devops.job = Job operations


devops.job.ls = List Jobs in Space
devops.job.ls.options = n|ns,o=wide|yaml|json|raw,O
devops.job.ls.options.n = $devops.space.idx
devops.job.ls.options.o = $global.options.o
devops.job.ls.options.O = $global.options.O

devops.job.get = Get Details of Job
devops.job.get.args = jobId
devops.job.get.args.jobId = $devops.job.id
devops.job.get.options = n|ns,o=wide|yaml|json|raw,O
devops.job.get.options.n = $devops.space.idx
devops.job.get.options.o = $global.options.o
devops.job.get.options.O = $global.options.O

devops.job.view = View Job dashboard in web browser
devops.job.view.args = jobId
devops.job.view.args.jobId = $devops.job.id
devops.job.view.options = n|ns
devops.job.view.options.n = $devops.space.idx
devops.job.view.descr =\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.job.view = View Job dashboard in web browser
devops.job.view.args = jobId
devops.job.view.args.jobId = $devops.job.id
devops.job.view.options = n|ns
devops.job.view.options.n = $devops.space.idx
devops.job.view.descr =\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.job.create = Create Job
devops.job.create.args = jobId
devops.job.create.args.jobId = $devops.job.id
devops.job.create.options = props=...++,$devops.job.get.options
devops.job.create.options.props = Key-value pairs for Job properties
devops.job.create.options.n = $devops.space.idx
devops.job.create.options.o = $global.options.o
devops.job.create.options.O = $global.options.O
devops.job.create.descr = Create Job with specified name and properties.\n\
Get/show is done after creation, if output options -o|-O are specified.

devops.job.update = Update Job
devops.job.update.args = jobId
devops.job.update.args.jobId = $devops.job.id
devops.job.update.options = props=...++,$devops.job.get.options
devops.job.update.options.props = Key-value pairs for Job properties
devops.job.update.options.n = $devops.space.idx
devops.job.update.options.o = $global.options.o
devops.job.update.options.O = $global.options.O
devops.job.update.descr = Update properties of Job with specified id.\n\
Get/show Jobs after update, if output options -o|-O are specified.

devops.job.delete = Delete Job
devops.job.delete.args = jobId
devops.job.delete.args.jobId = $devops.job.id
devops.job.delete.options = $devops.job.ls.options
devops.job.delete.options.n = $devops.space.idx
devops.job.delete.options.o = $global.options.o
devops.job.delete.options.O = $global.options.O
devops.job.delete.descr = \
Update properties of Job with specified id.\n\
List Jobs in same Space after delete, if output options -o|-O are specified.

devops.job.resources = Scale resources of Job
devops.job.resources.args = jobId
devops.job.resources.args.jobId = $devops.job.id
devops.job.resources.options = m|mem,d|disk|storage,$devops.job.get.options
devops.job.resources.options.m = Memory size (units Gi|G|Mi|M)
devops.job.resources.options.d = Ephemeral Disk/Storage size (units Gi|G)
devops.job.resources.options.n = $devops.space.idx
devops.job.resources.options.o = $global.options.o
devops.job.resources.options.O = $global.options.O
devops.job.resources.descr = \
Scale memory and ephemeral storage resources of Job.\n\
New pods are created with new resource settings.\n\
Get/show Job after update, if output options -o|-O are specified.

devops.job.start = Start a Job
devops.job.start.args = jobId
devops.job.start.args.jobId = $devops.job.id
devops.job.start.args = jobId
devops.job.start.args.jobId = $devops.job.id
devops.job.start.options =  $devops.job.get.options
devops.job.start.options.n = $devops.space.idx
devops.job.start.options.o = $global.options.o
devops.job.start.options.O = $global.options.O
devops.job.start.descr = \
Start a Job.\n\
Get/show Job after start, if output options -o|-O are specified.

devops.job.stop = Stop a Job
devops.job.stop.args = jobId
devops.job.stop.args.jobId = $devops.job.id
devops.job.stop.args = jobId
devops.job.stop.args.jobId = $devops.job.id
devops.job.stop.options =  $devops.job.get.options
devops.job.stop.options.n = $devops.space.idx
devops.job.stop.options.o = $global.options.o
devops.job.stop.options.O = $global.options.O
devops.job.stop.descr = \
Stop a Job.\n\
Get/show Job after stop, if output options -o|-O are specified.

devops.job.restart = Restart a Job
devops.job.restart.args = jobId
devops.job.restart.args.jobId = $devops.job.id
devops.job.restart.args = jobId
devops.job.restart.args.jobId = $devops.job.id
devops.job.restart.options =  $devops.job.get.options
devops.job.restart.options.n = $devops.space.idx
devops.job.restart.options.o = $global.options.o
devops.job.restart.options.O = $global.options.O
devops.job.restart.descr = \
Stop a Job.\n\
Get/show Job after restart, if output options -o|-O are specified.

devops.job.sync = Synchronize Job state/details from the cluster
devops.job.sync.args = jobId
devops.job.sync.args.jobId = $devops.job.id
devops.job.sync.args = jobId
devops.job.sync.args.jobId = $devops.job.id
devops.job.sync.options =  $devops.job.get.options
devops.job.sync.options.n = $devops.space.idx
devops.job.sync.options.o = $global.options.o
devops.job.sync.options.O = $global.options.O
devops.job.sync.descr = \
Synchronize Job state/details from the cluster.\n\
Get/show Job after sync, if output options -o|-O are specified.


devops.job.attach = Attach a Job from the cluster
devops.job.attach.args = jobId
devops.job.attach.args.jobId = $devops.job.id
devops.job.attach.options =  $devops.job.get.options
devops.job.attach.options.n = $devops.space.idx
devops.job.attach.options.o = $global.options.o
devops.job.attach.options.O = $global.options.O
devops.job.attach.descr = \
Attach a Job from the cluster.\n\
Get/show Job after attach, if output options -o|-O are specified.


devops.job.exec = Execute command on instance/replica/pod of Job
devops.job.exec.args = jobId,podId
devops.job.exec.args.jobId = $devops.job.id
devops.job.exec.args.podId = $devops.ipod.id
devops.job.exec.options =  $devops.job.get.options
devops.job.exec.options.n = $devops.space.idx
devops.job.exec.options.o = $global.options.o
devops.job.exec.options.O = $global.options.O
devops.job.exec.descr = \
Execute command on instance/replica/pod of Job.\n\
If pod is not specified, the first pod is considered.\n\
Get/show Job after attach, if output options -o|-O are specified.

devops.job.logs = View logs of instance/replica/pod of Job
devops.job.logs.args = jobId,podId
devops.job.logs.args.jobId = $devops.job.id
devops.job.logs.args.podId = $devops.ipod.id
devops.job.logs.options =  $devops.job.get.options
devops.job.logs.options.n = $devops.space.idx
devops.job.logs.options.o = $global.options.o
devops.job.logs.options.O = $global.options.O
devops.job.logs.descr = \
View logs of instance/replica/pod of Job.\n\
If pod is not specified, the first pod is considered.\n\
Get/show Job after attach, if output options -o|-O are specified.

devops.job.schema = Show attributes/properties of Job

devops.job.help = Show help on commands for Jobs

devops.job.pod = Operations on instances/replicas/pods of Job

devops.job.pod.ls = List instances/replicas/pods of Job
devops.job.pod.ls.args = jobId
devops.job.pod.ls.args.jobId = $devops.job.id
devops.job.logs.descr = \
List instances/replicas/pods of Job.\n\

devops.job.pod.kill = Kill instance/replica/pod of Job
devops.job.pod.kill.args = jobId,podId
devops.job.pod.kill.args.jobId = $devops.job.id
devops.job.pod.kill.args.podId = $devops.ipod.id
devops.job.pod.kill..descr = \
Kill instance/replica/pod of Job.\n\
If pod is not specified, the first pod is considered.\n\
Get/show Job after kill, if output options -o|-O are specified.

devops.job.pod.help = Show help on commands for Jobs Pods


# Job Mounts

devops.job.mount = Job Mounts operations

devops.job.mount.ls = List Mounts of Job
devops.job.mount.ls.args = deployId
devops.job.mount.ls.args.deployId = $devops.job.id
devops.job.mount.ls.options = $global.ls.options
devops.job.mount.ls.options.n = $devops.space.idx
devops.job.mount.ls.options.o = $global.options.o
devops.job.mount.ls.options.O = $global.options.O

devops.job.mount.get = Get Mount of Job
devops.job.mount.get.args = deployId,mountId
devops.job.mount.get.args.deployId = $devops.job.id
devops.job.mount.get.args.mountId = $devops.mount.id

devops.job.mount.add = Add Mount to Job
devops.job.mount.add.args = deployId,mountId,props=...++
devops.job.mount.add.args.deployId = $devops.job.id
devops.job.mount.add.args.mountId = $devops.mount.name
devops.job.mount.add.options = props=...++
devops.job.mount.add.options.props = Key-value pairs for Mount properties
devops.job.mount.add.descr =\
Add Mount to Job with specified host and properties.\n\
Get/show is done after create, if output options -o|-O are specified.

devops.job.mount.update = Update Mount of Job
devops.job.mount.update.descr =\
Update properties of Mount of Job with specified id.\n\
Get/show is done after update, if output options -o|-O are specified.
devops.job.mount.update.args = deployId,mountId
devops.job.mount.update.args.deployId = $devops.job.id
devops.job.mount.update.args.mountId = $devops.mount.id
devops.job.mount.update.options = props=...++,$devops.job.get.options
devops.job.mount.update.options.props = $devops.job.mount.add.options.props
devops.job.mount.update.options.n = $devops.space.idx
devops.job.mount.update.options.o = $global.options.o
devops.job.mount.update.options.O = $global.options.O

devops.job.mount.delete = Delete Mount of Job
devops.job.mount.delete.args = deployId,mountId
devops.job.mount.delete.args.deployId = $devops.job.id
devops.job.mount.delete.args.mountId = $devops.mount.id
devops.job.mount.delete.options = $devops.mount.ls.options
devops.job.mount.delete.options.n = $devops.space.idx
devops.job.mount.delete.options.o = $global.options.o
devops.job.mount.delete.options.O = $global.options.O
devops.job.mount.delete.descr =\
Delete Mount of Job with specified id.\n\
List is done after delete, if output options -o|-O are specified.

devops.job.mount.schema = Show attributes/properties of Mount
devops.job.mount.help = Show help on commands for Job Mounts


# Job Environment Variables

devops.job.env = Job Environment Variables operations

devops.job.env.ls = List Environment Variables of Job
devops.job.env.ls.args = deployId
devops.job.env.ls.args.deployId = $devops.job.id
devops.job.env.ls.options = $global.ls.options
devops.job.env.ls.options.n = $devops.space.idx
devops.job.env.ls.options.o = $global.options.o
devops.job.env.ls.options.O = $global.options.O

devops.job.env.get = Get Environment Variable of Job
devops.job.env.get.args = deployId,envId
devops.job.env.get.args.deployId = $devops.job.id
devops.job.env.get.args.envId = $devops.env.id

devops.job.env.add = Add Environment Variable to Job
devops.job.env.add.args = deployId,envId,props=...++
devops.job.env.add.args.deployId = $devops.job.id
devops.job.env.add.args.envId = $devops.env.name
devops.job.env.add.options = props=...++
devops.job.env.add.options.props = Key-value pairs for Environment Variable properties
devops.job.env.add.descr =\
Add Environment Variable to Job with specified host and properties.\n\
Get/show is done after create, if output options -o|-O are specified.

devops.job.env.update = Update Environment Variable of Job
devops.job.env.update.descr =\
Update properties of Environment Variable of Job with specified id.\n\
Get/show is done after update, if output options -o|-O are specified.
devops.job.env.update.args = deployId,envId
devops.job.env.update.args.deployId = $devops.job.id
devops.job.env.update.args.envId = $devops.env.id
devops.job.env.update.options = props=...++,$devops.job.get.options
devops.job.env.update.options.props = $devops.job.env.add.options.props
devops.job.env.update.options.n = $devops.space.idx
devops.job.env.update.options.o = $global.options.o
devops.job.env.update.options.O = $global.options.O

devops.job.env.delete = Delete Environment Variable of Job
devops.job.env.delete.args = deployId,envId
devops.job.env.delete.args.deployId = $devops.job.id
devops.job.env.delete.args.envId = $devops.env.id
devops.job.env.delete.options = $devops.env.ls.options
devops.job.env.delete.options.n = $devops.space.idx
devops.job.env.delete.options.o = $global.options.o
devops.job.env.delete.options.O = $global.options.O
devops.job.env.delete.descr =\
Delete Environment Variable of Job with specified id.\n\
List is done after delete, if output options -o|-O are specified.

devops.job.env.schema = Show attributes/properties of Environment Variable
devops.job.env.help = Show help on commands for Job Environment Variables

# Job Bindings


devops.job.binding = Job Bindings operations

devops.job.binding.ls = List Bindings of Job
devops.job.binding.ls.args = deployId
devops.job.binding.ls.args.deployId = $devops.job.id
devops.job.binding.ls.options = $global.ls.options
devops.job.binding.ls.options.n = $devops.space.idx
devops.job.binding.ls.options.o = $global.options.o
devops.job.binding.ls.options.O = $global.options.O

devops.job.binding.get = Get Binding of Job
devops.job.binding.get.args = deployId,bindingId
devops.job.binding.get.args.deployId = $devops.job.id
devops.job.binding.get.args.bindingId = $devops.binding.id

devops.job.binding.add = Add Binding to Job
devops.job.binding.add.args = deployId,bindingId,props=...++
devops.job.binding.add.args.deployId = $devops.job.id
devops.job.binding.add.args.bindingId = $devops.binding.name
devops.job.binding.add.options = props=...++
devops.job.binding.add.options.props = Key-value pairs for Binding properties
devops.job.binding.add.descr =\
Add Binding to Job with specified host and properties.\n\
Get/show is done after create, if output options -o|-O are specified.

devops.job.binding.update = Update Binding of Job
devops.job.binding.update.descr =\
Update properties of Binding of Job with specified id.\n\
Get/show is done after update, if output options -o|-O are specified.
devops.job.binding.update.args = deployId,bindingId
devops.job.binding.update.args.deployId = $devops.job.id
devops.job.binding.update.args.bindingId = $devops.binding.id
devops.job.binding.update.options = props=...++,$devops.job.get.options
devops.job.binding.update.options.props = $devops.job.binding.add.options.props
devops.job.binding.update.options.n = $devops.space.idx
devops.job.binding.update.options.o = $global.options.o
devops.job.binding.update.options.O = $global.options.O

devops.job.binding.delete = Delete Binding of Job
devops.job.binding.delete.args = deployId,bindingId
devops.job.binding.delete.args.deployId = $devops.job.id
devops.job.binding.delete.args.bindingId = $devops.binding.id
devops.job.binding.delete.options = $devops.binding.ls.options
devops.job.binding.delete.options.n = $devops.space.idx
devops.job.binding.delete.options.o = $global.options.o
devops.job.binding.delete.options.O = $global.options.O
devops.job.binding.delete.descr =\
Delete Binding of Job with specified id.\n\
List is done after delete, if output options -o|-O are specified.

devops.job.binding.schema = Show attributes/properties of Binding
devops.job.binding.help = Show help on commands for Job Bindings




## CronJob Commands

devops.cronjob = CronJob operations

devops.cronjob.ls = List CronJobs in Space
devops.cronjob.ls.options = n|ns,o=wide|yaml|json|raw,O
devops.cronjob.ls.options.n = $devops.space.idx
devops.cronjob.ls.options.o = $global.options.o
devops.cronjob.ls.options.O = $global.options.O

devops.cronjob.get = Get Details of CronJob
devops.cronjob.get.args = cronjobId
devops.cronjob.get.args.cronjobId = $devops.cronjob.id
devops.cronjob.get.options = n|ns,o=wide|yaml|json|raw,O
devops.cronjob.get.options.n = $devops.space.idx
devops.cronjob.get.options.o = $global.options.o
devops.cronjob.get.options.O = $global.options.O

devops.cronjob.view = View CronJob dashboard in web browser
devops.cronjob.view.args = cronjobId
devops.cronjob.view.args.cronjobId = $devops.cronjob.id
devops.cronjob.view.options = n|ns
devops.cronjob.view.options.n = $devops.space.idx
devops.cronjob.view.descr =\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.cronjob.view = View CronJob dashboard in web browser
devops.cronjob.view.args = cronjobId
devops.cronjob.view.args.cronjobId = $devops.cronjob.id
devops.cronjob.view.options = n|ns
devops.cronjob.view.options.n = $devops.space.idx
devops.cronjob.view.descr =\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.cronjob.create = Create CronJob
devops.cronjob.create.args = cronjobId
devops.cronjob.create.args.cronjobId = $devops.cronjob.id
devops.cronjob.create.options = props=...++,$devops.cronjob.get.options
devops.cronjob.create.options.props = Key-value pairs for CronJob properties
devops.cronjob.create.options.n = $devops.space.idx
devops.cronjob.create.options.o = $global.options.o
devops.cronjob.create.options.O = $global.options.O
devops.cronjob.create.descr = Create CronJob with specified name and properties.\n\
Get/show is done after creation, if output options -o|-O are specified.

devops.cronjob.update = Update CronJob
devops.cronjob.update.args = cronjobId
devops.cronjob.update.args.cronjobId = $devops.cronjob.id
devops.cronjob.update.options = props=...++,$devops.cronjob.get.options
devops.cronjob.update.options.props = Key-value pairs for CronJob properties
devops.cronjob.update.options.n = $devops.space.idx
devops.cronjob.update.options.o = $global.options.o
devops.cronjob.update.options.O = $global.options.O
devops.cronjob.update.descr = Update properties of CronJob with specified id.\n\
Get/show CronJobs after update, if output options -o|-O are specified.

devops.cronjob.delete = Delete CronJob
devops.cronjob.delete.args = cronjobId
devops.cronjob.delete.args.cronjobId = $devops.cronjob.id
devops.cronjob.delete.options = $devops.cronjob.ls.options
devops.cronjob.delete.options.n = $devops.space.idx
devops.cronjob.delete.options.o = $global.options.o
devops.cronjob.delete.options.O = $global.options.O
devops.cronjob.delete.descr = \
Update properties of CronJob with specified id.\n\
List CronJobs in same Space after delete, if output options -o|-O are specified.

devops.cronjob.resources = Scale resources of Cronjob
devops.cronjob.resources.args = cronjobId
devops.cronjob.resources.args.cronjobId = $devops.cronjob.id
devops.cronjob.resources.options = m|mem,d|disk|storage,$devops.cronjob.get.options
devops.cronjob.resources.options.m = Memory size (units Gi|G|Mi|M)
devops.cronjob.resources.options.d = Ephemeral Disk/Storage size (units Gi|G)
devops.cronjob.resources.options.n = $devops.space.idx
devops.cronjob.resources.options.o = $global.options.o
devops.cronjob.resources.options.O = $global.options.O
devops.cronjob.resources.descr = \
Scale memory and ephemeral storage resources of Cronjob.\n\
New pods are created with new resource settings.\n\
Get/show Cronjob after update, if output options -o|-O are specified.

devops.cronjob.start = Start a Cronjob
devops.cronjob.start.args = cronjobId
devops.cronjob.start.args.cronjobId = $devops.cronjob.id
devops.cronjob.start.args = cronjobId
devops.cronjob.start.args.cronjobId = $devops.cronjob.id
devops.cronjob.start.options =  $devops.cronjob.get.options
devops.cronjob.start.options.n = $devops.space.idx
devops.cronjob.start.options.o = $global.options.o
devops.cronjob.start.options.O = $global.options.O
devops.cronjob.start.descr = \
Start a Cronjob.\n\
Get/show Cronjob after start, if output options -o|-O are specified.

devops.cronjob.stop = Stop a Cronjob
devops.cronjob.stop.args = cronjobId
devops.cronjob.stop.args.cronjobId = $devops.cronjob.id
devops.cronjob.stop.args = cronjobId
devops.cronjob.stop.args.cronjobId = $devops.cronjob.id
devops.cronjob.stop.options =  $devops.cronjob.get.options
devops.cronjob.stop.options.n = $devops.space.idx
devops.cronjob.stop.options.o = $global.options.o
devops.cronjob.stop.options.O = $global.options.O
devops.cronjob.stop.descr = \
Stop a Cronjob.\n\
Get/show Cronjob after stop, if output options -o|-O are specified.

devops.cronjob.restart = Restart a Cronjob
devops.cronjob.restart.args = cronjobId
devops.cronjob.restart.args.cronjobId = $devops.cronjob.id
devops.cronjob.restart.args = cronjobId
devops.cronjob.restart.args.cronjobId = $devops.cronjob.id
devops.cronjob.restart.options =  $devops.cronjob.get.options
devops.cronjob.restart.options.n = $devops.space.idx
devops.cronjob.restart.options.o = $global.options.o
devops.cronjob.restart.options.O = $global.options.O
devops.cronjob.restart.descr = \
Stop a Cronjob.\n\
Get/show Cronjob after restart, if output options -o|-O are specified.

devops.cronjob.sync = Synchronize Cronjob state/details from the cluster
devops.cronjob.sync.args = cronjobId
devops.cronjob.sync.args.cronjobId = $devops.cronjob.id
devops.cronjob.sync.args = cronjobId
devops.cronjob.sync.args.cronjobId = $devops.cronjob.id
devops.cronjob.sync.options =  $devops.cronjob.get.options
devops.cronjob.sync.options.n = $devops.space.idx
devops.cronjob.sync.options.o = $global.options.o
devops.cronjob.sync.options.O = $global.options.O
devops.cronjob.sync.descr = \
Synchronize Cronjob state/details from the cluster.\n\
Get/show Cronjob after sync, if output options -o|-O are specified.


devops.cronjob.attach = Attach a Cronjob from the cluster
devops.cronjob.attach.args = cronjobId
devops.cronjob.attach.args.cronjobId = $devops.cronjob.id
devops.cronjob.attach.options =  $devops.cronjob.get.options
devops.cronjob.attach.options.n = $devops.space.idx
devops.cronjob.attach.options.o = $global.options.o
devops.cronjob.attach.options.O = $global.options.O
devops.cronjob.attach.descr = \
Attach a Cronjob from the cluster.\n\
Get/show Cronjob after attach, if output options -o|-O are specified.


devops.cronjob.exec = Execute command on instance/replica/pod of Cronjob
devops.cronjob.exec.args = cronjobId,podId
devops.cronjob.exec.args.cronjobId = $devops.cronjob.id
devops.cronjob.exec.args.podId = $devops.ipod.id
devops.cronjob.exec.options =  $devops.cronjob.get.options
devops.cronjob.exec.options.n = $devops.space.idx
devops.cronjob.exec.options.o = $global.options.o
devops.cronjob.exec.options.O = $global.options.O
devops.cronjob.exec.descr = \
Execute command on instance/replica/pod of Cronjob.\n\
If pod is not specified, the first pod is considered.\n\
Get/show Cronjob after attach, if output options -o|-O are specified.

devops.cronjob.logs = View logs of instance/replica/pod of Cronjob
devops.cronjob.logs.args = cronjobId,podId
devops.cronjob.logs.args.cronjobId = $devops.cronjob.id
devops.cronjob.logs.args.podId = $devops.ipod.id
devops.cronjob.logs.options =  $devops.cronjob.get.options
devops.cronjob.logs.options.n = $devops.space.idx
devops.cronjob.logs.options.o = $global.options.o
devops.cronjob.logs.options.O = $global.options.O
devops.cronjob.logs.descr = \
View logs of instance/replica/pod of Cronjob.\n\
If pod is not specified, the first pod is considered.\n\
Get/show Cronjob after attach, if output options -o|-O are specified.

devops.cronjob.schema = Show attributes/properties of Cronjob

devops.cronjob.help = Show help on commands for Cronjobs

devops.cronjob.job = Operations on instances/replicas/jobs of Cronjob

devops.cronjob.job.ls = List Job instances for CronJob
devops.cronjob.job.ls.args = cronjobId
devops.cronjob.job.ls.args.cronjobId = $devops.cronjob.id
devops.cronjob.logs.descr = \
List Job instances of Cronjob.\n\

devops.cronjob.job.kill = Kill instance/replica/job of Cronjob
devops.cronjob.job.kill.args = cronjobId,jobId
devops.cronjob.job.kill.args.cronjobId = $devops.cronjob.id
devops.cronjob.job.kill.args.jobId = $devops.ijob.id
devops.cronjob.job.kill..descr = \
Kill instance/replica/job of Cronjob.\n\
If job is not specified, the first job is considered.\n\
Get/show Cronjob after kill, if output options -o|-O are specified.

devops.cronjob.job.help = Show help on commands for Cronjobs Pods



## CronJob Mount
devops.cronjob.mount = CronJob Mounts operations

devops.cronjob.mount.ls = List Mounts of CronJob
devops.cronjob.mount.ls.args = deployId
devops.cronjob.mount.ls.args.deployId = $devops.cronjob.id
devops.cronjob.mount.ls.options = $global.ls.options
devops.cronjob.mount.ls.options.n = $devops.space.idx
devops.cronjob.mount.ls.options.o = $global.options.o
devops.cronjob.mount.ls.options.O = $global.options.O

devops.cronjob.mount.get = Get Mount of CronJob
devops.cronjob.mount.get.args = deployId,mountId
devops.cronjob.mount.get.args.deployId = $devops.cronjob.id
devops.cronjob.mount.get.args.mountId = $devops.mount.id

devops.cronjob.mount.add = Add Mount to CronJob
devops.cronjob.mount.add.args = deployId,mountId,props=...++
devops.cronjob.mount.add.args.deployId = $devops.cronjob.id
devops.cronjob.mount.add.args.mountId = $devops.mount.name
devops.cronjob.mount.add.options = props=...++
devops.cronjob.mount.add.options.props = Key-value pairs for Mount properties
devops.cronjob.mount.add.descr =\
Add Mount to CronJob with specified host and properties.\n\
Get/show is done after create, if output options -o|-O are specified.

devops.cronjob.mount.update = Update Mount of CronJob
devops.cronjob.mount.update.descr =\
Update properties of Mount of CronJob with specified id.\n\
Get/show is done after update, if output options -o|-O are specified.
devops.cronjob.mount.update.args = deployId,mountId
devops.cronjob.mount.update.args.deployId = $devops.cronjob.id
devops.cronjob.mount.update.args.mountId = $devops.mount.id
devops.cronjob.mount.update.options = props=...++,$devops.cronjob.get.options
devops.cronjob.mount.update.options.props = $devops.cronjob.mount.add.options.props
devops.cronjob.mount.update.options.n = $devops.space.idx
devops.cronjob.mount.update.options.o = $global.options.o
devops.cronjob.mount.update.options.O = $global.options.O

devops.cronjob.mount.delete = Delete Mount of CronJob
devops.cronjob.mount.delete.args = deployId,mountId
devops.cronjob.mount.delete.args.deployId = $devops.cronjob.id
devops.cronjob.mount.delete.args.mountId = $devops.mount.id
devops.cronjob.mount.delete.options = $devops.mount.ls.options
devops.cronjob.mount.delete.options.n = $devops.space.idx
devops.cronjob.mount.delete.options.o = $global.options.o
devops.cronjob.mount.delete.options.O = $global.options.O
devops.cronjob.mount.delete.descr =\
Delete Mount of CronJob with specified id.\n\
List is done after delete, if output options -o|-O are specified.

devops.cronjob.mount.schema = Show attributes/properties of Mount
devops.cronjob.mount.help = Show help on commands for CronJob Mounts


# CronJob Environment Variables

devops.cronjob.env = CronJob Environment Variables operations

devops.cronjob.env.ls = List Environment Variables of CronJob
devops.cronjob.env.ls.args = deployId
devops.cronjob.env.ls.args.deployId = $devops.cronjob.id
devops.cronjob.env.ls.options = $global.ls.options
devops.cronjob.env.ls.options.n = $devops.space.idx
devops.cronjob.env.ls.options.o = $global.options.o
devops.cronjob.env.ls.options.O = $global.options.O

devops.cronjob.env.get = Get Environment Variable of CronJob
devops.cronjob.env.get.args = deployId,envId
devops.cronjob.env.get.args.deployId = $devops.cronjob.id
devops.cronjob.env.get.args.envId = $devops.env.id

devops.cronjob.env.add = Add Environment Variable to CronJob
devops.cronjob.env.add.args = deployId,envId,props=...++
devops.cronjob.env.add.args.deployId = $devops.cronjob.id
devops.cronjob.env.add.args.envId = $devops.env.name
devops.cronjob.env.add.options = props=...++
devops.cronjob.env.add.options.props = Key-value pairs for Environment Variable properties
devops.cronjob.env.add.descr =\
Add Environment Variable to CronJob with specified host and properties.\n\
Get/show is done after create, if output options -o|-O are specified.

devops.cronjob.env.update = Update Environment Variable of CronJob
devops.cronjob.env.update.descr =\
Update properties of Environment Variable of CronJob with specified id.\n\
Get/show is done after update, if output options -o|-O are specified.
devops.cronjob.env.update.args = deployId,envId
devops.cronjob.env.update.args.deployId = $devops.cronjob.id
devops.cronjob.env.update.args.envId = $devops.env.id
devops.cronjob.env.update.options = props=...++,$devops.cronjob.get.options
devops.cronjob.env.update.options.props = $devops.cronjob.env.add.options.props
devops.cronjob.env.update.options.n = $devops.space.idx
devops.cronjob.env.update.options.o = $global.options.o
devops.cronjob.env.update.options.O = $global.options.O

devops.cronjob.env.delete = Delete Environment Variable of CronJob
devops.cronjob.env.delete.args = deployId,envId
devops.cronjob.env.delete.args.deployId = $devops.cronjob.id
devops.cronjob.env.delete.args.envId = $devops.env.id
devops.cronjob.env.delete.options = $devops.env.ls.options
devops.cronjob.env.delete.options.n = $devops.space.idx
devops.cronjob.env.delete.options.o = $global.options.o
devops.cronjob.env.delete.options.O = $global.options.O
devops.cronjob.env.delete.descr =\
Delete Environment Variable of CronJob with specified id.\n\
List is done after delete, if output options -o|-O are specified.

devops.cronjob.env.schema = Show attributes/properties of Environment Variable
devops.cronjob.env.help = Show help on commands for CronJob Environment Variables

# CronJob Bindings

devops.cronjob.binding = CronJob Bindings operations

devops.cronjob.binding.ls = List Bindings of CronJob
devops.cronjob.binding.ls.args = deployId
devops.cronjob.binding.ls.args.deployId = $devops.cronjob.id
devops.cronjob.binding.ls.options = $global.ls.options
devops.cronjob.binding.ls.options.n = $devops.space.idx
devops.cronjob.binding.ls.options.o = $global.options.o
devops.cronjob.binding.ls.options.O = $global.options.O

devops.cronjob.binding.get = Get Binding of CronJob
devops.cronjob.binding.get.args = deployId,bindingId
devops.cronjob.binding.get.args.deployId = $devops.cronjob.id
devops.cronjob.binding.get.args.bindingId = $devops.binding.id

devops.cronjob.binding.add = Add Binding to CronJob
devops.cronjob.binding.add.args = deployId,bindingId,props=...++
devops.cronjob.binding.add.args.deployId = $devops.cronjob.id
devops.cronjob.binding.add.args.bindingId = $devops.binding.name
devops.cronjob.binding.add.options = props=...++
devops.cronjob.binding.add.options.props = Key-value pairs for Binding properties
devops.cronjob.binding.add.descr =\
Add Binding to CronJob with specified host and properties.\n\
Get/show is done after create, if output options -o|-O are specified.

devops.cronjob.binding.update = Update Binding of CronJob
devops.cronjob.binding.update.descr =\
Update properties of Binding of CronJob with specified id.\n\
Get/show is done after update, if output options -o|-O are specified.
devops.cronjob.binding.update.args = deployId,bindingId
devops.cronjob.binding.update.args.deployId = $devops.cronjob.id
devops.cronjob.binding.update.args.bindingId = $devops.binding.id
devops.cronjob.binding.update.options = props=...++,$devops.cronjob.get.options
devops.cronjob.binding.update.options.props = $devops.cronjob.binding.add.options.props
devops.cronjob.binding.update.options.n = $devops.space.idx
devops.cronjob.binding.update.options.o = $global.options.o
devops.cronjob.binding.update.options.O = $global.options.O

devops.cronjob.binding.delete = Delete Binding of CronJob
devops.cronjob.binding.delete.args = deployId,bindingId
devops.cronjob.binding.delete.args.deployId = $devops.cronjob.id
devops.cronjob.binding.delete.args.bindingId = $devops.binding.id
devops.cronjob.binding.delete.options = $devops.binding.ls.options
devops.cronjob.binding.delete.options.n = $devops.space.idx
devops.cronjob.binding.delete.options.o = $global.options.o
devops.cronjob.binding.delete.options.O = $global.options.O
devops.cronjob.binding.delete.descr =\
Delete Binding of CronJob with specified id.\n\
List is done after delete, if output options -o|-O are specified.

devops.cronjob.binding.schema = Show attributes/properties of Binding
devops.cronjob.binding.help = Show help on commands for CronJob Bindings

## Domain Commands

devops.domain = Domain operations

devops.domain.id = Identifier of Domain (name | url | id | uuid)
devops.domain.idx = Identifier of Domain (name | url | id | uuid). Defaults to current Domain, if not specified.

devops.domain.get.options=$global.get.options
devops.domain.ls.options=$global.ls.options

devops.domain.ls = List Registries
devops.domain.ls.options = $global.ls.options
devops.domain.ls.options.o = $global.options.o
devops.domain.ls.options.O = $global.options.O
devops.domain.ls.descr = \
List Domains

devops.domain.get = Get Details of Domain
devops.domain.get.args = domainId
devops.domain.get.args.domainId = $devops.domain.id
devops.domain.get.options = $devops.domain.ls.options
devops.domain.get.options.o = $global.options.o
devops.domain.get.options.O = $global.options.O
devops.domain.get.descr = \
Get Details of Domain

devops.domain.view = View Domain dashboard in web browser
devops.domain.view.args = domainId+
devops.domain.view.args.domainId = $devops.domain.id
devops.domain.view.options = n|ns
devops.domain.view.options.n = $devops.space.idx
devops.domain.view.descr =\
If domainId is not specified, defaults to current Domain if any.\n\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.domain.create = Create Domain
devops.domain.create.args = domainId
devops.domain.create.args.domainId = $devops.domain.id
devops.domain.create.options = props=...++,$devops.domain.get.options
devops.domain.create.options.props = Key-value pairs for Domain properties
devops.domain.create.options.o = $global.options.o
devops.domain.create.options.O = $global.options.O
devops.domain.create.descr = \
Create Domain with specified name and properties.\n\
Get/show is done after creation, if output options -o|-O are specified.

devops.domain.update = Update Domain
devops.domain.update.args = domainId
devops.domain.update.args.domainId = $devops.domain.id
devops.domain.update.options = props=...++,$devops.domain.get.options
devops.domain.update.options.props = Key-value pairs for Domain properties
devops.domain.update.options.o = $global.options.o
devops.domain.update.options.O = $global.options.O
devops.domain.update.descr = \
Update properties of Domain with specified id.\n\
Get/show Domain after update, if output options -o|-O are specified.

devops.domain.delete = Delete Domain
devops.domain.delete.args = domainId
devops.domain.delete.args.domainId = $devops.domain.id
devops.domain.delete.options = $devops.domain.ls.options
devops.domain.delete.options.o = $global.options.o
devops.domain.delete.options.O = $global.options.O
devops.domain.delete.descr = \
Delete Domain with specified id.\n\
List Domains after delete, if output options -o|-O are specified.

devops.domain.set = Set current Domain
devops.domain.set.args = domainId
devops.domain.set.args.domainId = $devops.domain.id
devops.domain.set.options.o = $global.set.options.o
devops.domain.set.descr = \
Set current Domain.\n\
Created Deployment/Jobs/CronJob will use this Domain if not specified.

devops.domain.unset = Unset current Domain
devops.domain.unset.args = domainId
devops.domain.unset.args.domainId = $devops.domain.id
devops.domain.unset.descr = \
Unset current Domain.

devops.domain.schema = Show attributes/properties of Domain

devops.domain.help = Show help on commands for Domain

devops.domain.schema = Show attributes/properties of Domain

devops.domain.help = Show help on commands for Domain



## Registry

devops.registry = Registry operations

devops.registry.id = Identifier of Registry (name | url | id | uuid)
devops.registry.idx = Identifier of Registry (name | url | id | uuid). Defaults to current Registry, if not specified.

devops.registry.get.options=$global.get.options
devops.registry.ls.options=$global.ls.options

devops.registry.ls = List Registries
devops.registry.ls.options = $devops.registry.ls.options
devops.registry.ls.options.o = $global.options.o
devops.registry.ls.options.O = $global.options.O
devops.registry.ls.descr = \
List Registries\n\
Each private Registry needs to be configured with the access credentials.\n\
At least one registry need to be created to push images after a CICD build.\n\
If no Registry is defined, images can pull can only from public registries.

devops.registry.get = Get Details of Registry
devops.registry.get.args = registryId
devops.registry.get.args.registryId = $devops.registry.id
devops.registry.get.options = n|ns,o=wide|yaml|json|raw,O
devops.registry.get.options.o = $global.options.o
devops.registry.get.options.O = $global.options.O
devops.registry.get.descr = \
Get Details of Registry\n\
Each private Registry needs to be configured with the access credentials.\n\
At least one registry need to be created to push images after a CICD build.\n\
If no Registry is defined, images can pull can only from public registries.

devops.registry.view = View Registry dashboard in web browser
devops.registry.view.args = registryId+
devops.registry.view.args.registryId = $devops.registry.id
devops.registry.view.descr =\
If registryId is not specified, defaults to current Registry if any.\n\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.registry.create = Create Registry
devops.registry.create.args = registryId
devops.registry.create.args.registryId = $devops.registry.id
devops.registry.create.options = props=...++,$devops.registry.get.options
devops.registry.create.options.props = Key-value pairs for Registry properties
devops.registry.create.options.o = $global.options.o
devops.registry.create.options.O = $global.options.O
devops.registry.create.descr = \
Create Registry with specified name and properties.\n\
Get/show is done after creation, if output options -o|-O are specified.

devops.registry.update = Update Registry
devops.registry.update.args = registryId
devops.registry.update.args.registryId = $devops.registry.id
devops.registry.update.options = props=...++,$devops.registry.get.options
devops.registry.update.options.props = Key-value pairs for Registry properties
devops.registry.update.options.o = $global.options.o
devops.registry.update.options.O = $global.options.O
devops.registry.update.descr = \
Update properties of Registry with specified id.\n\
Get/show Registry after update, if output options -o|-O are specified.

devops.registry.delete = Delete Registry
devops.registry.delete.args = registryId
devops.registry.delete.args.registryId = $devops.registry.id
devops.registry.delete.options = $devops.registry.ls.options
devops.registry.delete.options.o = $global.options.o
devops.registry.delete.options.O = $global.options.O
devops.registry.delete.descr = \
Delete Registry with specified id.\n\
List Registries after delete, if output options -o|-O are specified.

devops.registry.set = Set current Registry
devops.registry.set.args = registryId
devops.registry.set.args.registryId = $devops.registry.id
devops.registry.set.options.o = $global.set.options.o
devops.registry.set.descr = \
Set current Registry.\n\
Created Deployment/Jobs/CronJob will use this Registry if not specified.

devops.registry.unset = Unset current Registry
devops.registry.unset.args = registryId
devops.registry.unset.args.registryId = $devops.registry.id
devops.registry.unset.descr = \
Unset current Registry.

devops.registry.schema = Show attributes/properties of Domain

devops.registry.help = Show help on commands for Domain


## VCS

devops.vcs = Git VCS operations

devops.vcs.id = Identifier of Git Vcs (name | url | id | uuid)
devops.vcs.idx = Identifier of Git Vcs (name | url | id | uuid). Defaults to current Git Vcs, if not specified.

devops.vcs.get.options=$global.get.options
devops.vcs.ls.options=$global.ls.options

devops.vcs.ls = List Registries
devops.vcs.ls.options = $global.ls.options
devops.vcs.ls.options.o = $global.options.o
devops.vcs.ls.options.O = $global.options.O
devops.vcs.ls.descr = \
List Git Vcs

devops.vcs.get = Get Details of Git Vcs
devops.vcs.get.args = vcsId
devops.vcs.get.args.vcsId = $devops.vcs.id
devops.vcs.get.options = $devops.vcs.ls.options
devops.vcs.get.options.o = $global.options.o
devops.vcs.get.options.O = $global.options.O
devops.vcs.get.descr = \
Get Details of Git Vcs

devops.vcs.view = View Git Vcs dashboard in web browser
devops.vcs.view.args = vcsId+
devops.vcs.view.args.vcsId = $devops.vcs.id
devops.vcs.view.descr =\
If vcsId is not specified, defaults to current VCS if any.\n\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.vcs.create = Create Git Vcs
devops.vcs.create.args = vcsId
devops.vcs.create.args.vcsId = $devops.vcs.id
devops.vcs.create.options = props=...++,$devops.vcs.get.options
devops.vcs.create.options.props = Key-value pairs for Git Vcs properties
devops.vcs.create.options.o = $global.options.o
devops.vcs.create.options.O = $global.options.O
devops.vcs.create.descr = \
Create Git Vcs with specified name and properties.\n\
Get/show is done after creation, if output options -o|-O are specified.

devops.vcs.update = Update Git Vcs
devops.vcs.update.args = vcsId
devops.vcs.update.args.vcsId = $devops.vcs.id
devops.vcs.update.options = props=...++,$devops.vcs.get.options
devops.vcs.update.options.props = Key-value pairs for Git Vcs properties
devops.vcs.update.options.o = $global.options.o
devops.vcs.update.options.O = $global.options.O
devops.vcs.update.descr = \
Update properties of Git Vcs with specified id.\n\
Get/show Git Vcs after update, if output options -o|-O are specified.

devops.vcs.delete = Delete Git Vcs
devops.vcs.delete.args = vcsId
devops.vcs.delete.options = $devops.vcs.ls.options
devops.vcs.delete.args.vcsId = $devops.vcs.id
devops.vcs.delete.options.o = $global.options.o
devops.vcs.delete.options.O = $global.options.O
devops.vcs.delete.descr = \
Delete Git Vcs with specified id.\n\
List Git Vcs after delete, if output options -o|-O are specified.

devops.vcs.set = Set current Git Vcs
devops.vcs.set.args = vcsId
devops.vcs.set.args.vcsId = $devops.vcs.id
devops.vcs.set.options.o = $global.set.options.o
devops.vcs.set.descr = \
Set current Git Vcs.\n\
Created Deployment/Jobs/CronJob will use this Git Vcs if not specified.

devops.vcs.unset = Unset current Git Vcs
devops.vcs.unset.args = vcsId
devops.vcs.unset.args.vcsId = $devops.vcs.id
devops.vcs.unset.descr = \
Unset current Git Vcs.

devops.vcs.schema = Show attributes/properties of Domain

devops.vcs.help = Show help on commands for Domain


## Catalog

devops.catalog = Catalog operations

devops.catalog.id = Identifier of Catalog (name | url | id | uuid)
devops.catalog.idx = Identifier of Catalog (name | url | id | uuid). Defaults to current Catalog, if not specified.

devops.catalog.get.options=$global.get.options
devops.catalog.ls.options=$global.ls.options

devops.catalog.ls = List Registries
devops.catalog.ls.options = $global.ls.options
devops.catalog.ls.options.o = $global.options.o
devops.catalog.ls.options.O = $global.options.O
devops.catalog.ls.descr = \
List Catalogs

devops.catalog.get = Get Details of Catalog
devops.catalog.get.args = catalogId
devops.catalog.get.args.catalogId = $devops.catalog.id
devops.catalog.get.options = $devops.catalog.ls.options
devops.catalog.get.options.o = $global.options.o
devops.catalog.get.options.O = $global.options.O
devops.catalog.get.descr = \
Get Details of Catalog

devops.catalog.view = View Catalog dashboard in web browser
devops.catalog.view.args = catalogId+
devops.catalog.view.args.catalogId = $devops.catalog.id
devops.catalog.view.descr =\
If catalogId is not specified, defaults to current Catalog if any.\n\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.catalog.create = Create Catalog
devops.catalog.create.args = catalogId
devops.catalog.create.args.catalogId = $devops.catalog.id
devops.catalog.create.options = props=...++,$devops.catalog.get.options
devops.catalog.create.options.props = Key-value pairs for Catalog properties
devops.catalog.create.options.o = $global.options.o
devops.catalog.create.options.O = $global.options.O
devops.catalog.create.descr = \
Create Catalog with specified name and properties.\n\
Get/show is done after creation, if output options -o|-O are specified.

devops.catalog.update = Update Catalog
devops.catalog.update.args = catalogId
devops.catalog.update.args.catalogId = $devops.catalog.id
devops.catalog.update.options = props=...++,$devops.catalog.get.options
devops.catalog.update.options.props = Key-value pairs for Catalog properties
devops.catalog.update.options.o = $global.options.o
devops.catalog.update.options.O = $global.options.O
devops.catalog.update.descr = \
Update properties of Catalog with specified id.\n\
Get/show Catalog after update, if output options -o|-O are specified.

devops.catalog.delete = Delete Catalog
devops.catalog.delete.args = catalogId
devops.catalog.delete.args.catalogId = $devops.catalog.id
devops.catalog.delete.options = $devops.catalog.ls.options
devops.catalog.delete.options.o = $global.options.o
devops.catalog.delete.options.O = $global.options.O
devops.catalog.delete.descr = \
Delete Catalog with specified id.\n\
List Catalogs after delete, if output options -o|-O are specified.

devops.catalog.set = Set current Catalog
devops.catalog.set.args = catalogId
devops.catalog.set.args.catalogId = $devops.catalog.id
devops.catalog.set.options.o = $global.set.options.o
devops.catalog.set.descr = \
Set current Catalog.\n\
Created Deployment/Jobs/CronJob will use this Catalog if not specified.

devops.catalog.unset = Unset current Catalog
devops.catalog.unset.args = catalogId
devops.catalog.unset.args.catalogId = $devops.catalog.id
devops.catalog.unset.descr = \
Unset current Catalog.

devops.catalog.schema = Show attributes/properties of Domain

devops.catalog.help = Show help on commands for Domain

## Solution

devops.solution = Solution operations

devops.solution.id = Identifier of Solution (name | url | id | uuid)
devops.solution.idx = Identifier of Solution (name | url | id | uuid). Defaults to current Solution, if not specified.

devops.solution.get.options=$global.get.options
devops.solution.ls.options=$global.ls.options

devops.solution.ls = List Registries
devops.solution.ls.options = $global.ls.options
devops.solution.ls.options.o = $global.options.o
devops.solution.ls.options.O = $global.options.O
devops.solution.ls.descr = \
List Solutions

devops.solution.get = Get Details of Solution
devops.solution.get.args = solutionId
devops.solution.get.args.solutionId = $devops.solution.id
devops.solution.get.options = $devops.solution.ls.options
devops.solution.get.options.o = $global.options.o
devops.solution.get.options.O = $global.options.O
devops.solution.get.descr = \
Get Details of Solution

devops.solution.view = View Solution dashboard in web browser
devops.solution.view.args = solutionId+
devops.solution.view.args.solutionId = $devops.solution.id
devops.solution.view.descr =\
If solutionId is not specified, defaults to current Solution.\n\
Requires environment where a default web-browser is configured and can be started/open.\n\
You need to login via the web-browser the first time to start a web session in Cloud Manager.

devops.solution.create = Create Solution
devops.solution.create.args = solutionId
devops.solution.create.args.solutionId = $devops.solution.id
devops.solution.create.options = props=...++,$devops.solution.get.options
devops.solution.create.options.props = Key-value pairs for Solution properties
devops.solution.create.options.o = $global.options.o
devops.solution.create.options.O = $global.options.O
devops.solution.create.descr = \
Create Solution with specified name and properties.\n\
Get/show is done after creation, if output options -o|-O are specified.

devops.solution.update = Update Solution
devops.solution.update.args = solutionId
devops.solution.update.args.solutionId = $devops.solution.id
devops.solution.update.options = props=...++,$devops.solution.get.options
devops.solution.update.options.props = Key-value pairs for Solution properties
devops.solution.update.options.o = $global.options.o
devops.solution.update.options.O = $global.options.O
devops.solution.update.descr = \
Update properties of Solution with specified id.\n\
Get/show Solution after update, if output options -o|-O are specified.

devops.solution.delete = Delete Solution
devops.solution.delete.args = solutionId
devops.solution.delete.args.solutionId = $devops.solution.id
devops.solution.delete.options = $devops.solution.ls.options
devops.solution.delete.options.o = $global.options.o
devops.solution.delete.options.O = $global.options.O
devops.solution.delete.descr = \
Delete Solution with specified id.\n\
List Solutions after delete, if output options -o|-O are specified.

devops.solution.schema = Show attributes/properties of Domain

devops.solution.help = Show help on commands for Domain

## Marketplace

devops.marketplace = Marketplace operations

devops.marketplace.ls = List Marketplace Solutions

devops.marketplace.help = Show help on commands for Marketplace



#################
##SSO Gateway

sso = SSO operations

sso.login = Login to Server

## API

sso.api = API operations

sso.api.ls = List configured APIs
sso.api.ls.options = o=wide|yaml|json|raw

sso.api.get = Show current API
sso.api.get.options = o=wide|yaml|json|raw

sso.api.delete = Forget API
sso.api.set = Set current API

sso.api.unset = Unset current API
sso.api.help = Show help on commands for APIs

## Token

sso.token = OAuth Token operations
sso.token.show = Show Token details
sso.token.get = Get new Token
sso.token.delete = Delete Token
sso.token.help = Show help on commands for Tokens

## User

sso.user = User operations
sso.user.ls = List Users
sso.user.get = Get Details of User
sso.user.create = Create User
sso.user.update = Update User
sso.user.delete = Delete User
sso.user.schema = Show attributes/properties of User
sso.user.help = Show help on commands for User

## Group

sso.group = User Group operations
sso.group.ls = List User Groups
sso.group.get = Get Details of Group
sso.group.create = Create Group
sso.group.update = Update Group
sso.group.delete = Delete Group
sso.group.set = Set current Group
sso.group.unset = Unset current Group

sso.group.schema = Show attributes/properties of Group
sso.group.help = Show help on commands for Group

## Invitation

sso.invitation = Invitation operations
sso.invitation.ls = List Invitations
sso.invitation.get = Get Details of Invitation
sso.invitation.create = Create Invitation
sso.invitation.update = Update Invitation
sso.invitation.delete = Delete Invitation
sso.invitation.schema = Show attributes/properties of Invitation
sso.invitation.help = Show help on commands for Invitation

## Role

sso.role = Role operations
sso.role.ls = List Roles
sso.role.get = Get Details of Role
sso.role.create = Create Role
sso.role.update = Update Role
sso.role.delete = Delete Role
sso.role.schema = Show attributes/properties of Role
sso.role.help = Show help on commands for Role

## Group Membership Role

sso.member = Group Membership operations
sso.member.ls = List Members of a Group
sso.member.get = Get Details of Member
sso.member.add = Add Member to Group
sso.member.update = Update Member
sso.member.remove = Remove Member from Group
sso.member.schema = Show attributes/properties of Group Member
sso.member.help = Show help on commands for Group Member

## Client Apps

sso.client = Client operations
sso.client.ls = List Clients
sso.client.get = Get Details of Client
sso.client.create = Create Client
sso.client.update = Update Client
sso.client.delete = Delete Client
sso.client.schema = Show attributes/properties of Client
sso.client.help = Show help on commands for Client

## SSO Generic

sso.ls = List resources
sso.ls.descr = List Users | Groups | Roles | Clients based on flags.
devops.ls.descr = List Spaces (| Domain | Registry | Vcs) based on flags. Defaults to list Spaces.

sso.ls.options = u,g,rl,ca,$global.ls.options
sso.ls.options.u = List Users
sso.ls.options.g = List Groups
sso.ls.options.rl = List Roles
sso.ls.options.ca = List Client Apps
devops.ls.options.o = $global.options.o
devops.ls.options.O = $global.options.O


sso.cd = Change current Group
sso.cd.descr = Sets default group where members are added
sso.pwd = Show current default/parent resources
sso.pwd.descr = Show current resources: Group

#################
# Notification Hub

notifications = Notifications Hub operations

## Events

notifications.event = Event operations
notifications.event.publish = Publish Event
notifications.event.schema = Show attributes/properties of Event
notifications.event.help = Show help on commands for Event

## Tracked Events

notifications.tracked-event = Tracked Event operations
notifications.tracked-event.ls = List Tracked Events
notifications.tracked-event.get = Get Details of Tracked Event
notifications.tracked-event.delete = Delete Tracked Event
notifications.tracked-event.schema = Show attributes/properties of Tracked Event
notifications.tracked-event.help = Show help on commands for Tracked Event

## Notifications

notifications.notification = Notification operations
notifications.notification.ls = List Notifications
notifications.notification.get = Get Details of Notification
notifications.notification.delete = Delete Notification
notifications.notification.schema = Show attributes/properties of Notification
notifications.notification.help = Show help on commands for Notification

## Template

notifications.template = Template operations
notifications.template.ls = List Templates
notifications.template.get = Get Details of Template
notifications.template.create = Create Template
notifications.template.update = Update Template
notifications.template.delete = Delete Template
notifications.template.schema = Show attributes/properties of Template
notifications.template.help = Show help on commands for Template

## NotificationType

notifications.notification-type = Notification Type operations
notifications.notification-type.ls = List Notification Types
notifications.notification-type.get = Get Details of Notification Type
notifications.notification-type.create = Create Notification Type
notifications.notification-type.update = Update Notification Type
notifications.notification-type.delete = Delete Notification Type
notifications.notification-type.schema = Show attributes/properties of Notification Type
notifications.notification-type.help = Show help on commands for Notification Type

## Mail/SMS Job

notifications.mjob = Mail/SMS Job operations
notifications.mjob.ls = List Mail/SMS Jobs
notifications.mjob.get = Get Details of Mail/SMS Job
notifications.mjob.create = Create Mail/SMS Job
notifications.mjob.update = Update Mail/SMS Job
notifications.mjob.delete = Delete Mail/SMS Job
notifications.mjob.schema = Show attributes/properties of Mail/SMS
notifications.mjob.help = Show help on commands for Mail/SMS


#################
# Social Hub

social = Social Hub operations

## Channel

social.channel = Channel operations
social.channel.ls = List Channels
social.channel.get = Get Details of Channel
social.channel.create = Create Channel
social.channel.update = Update Channel
social.channel.delete = Delete Channel
social.channel.schema = Show attributes/properties of Channel
social.channel.help = Show help on commands for Channel

## Message

social.message = Message operations
social.message.ls = List Messages in Channel
social.message.get = Get Details of Message
social.message.create = Post Message
social.message.update = Update Message
social.message.delete = Delete Message
social.message.schema = Show attributes/properties of Message
social.message.help = Show help on commands for Message

## Reaction

social.reaction = Reaction operations
social.reaction.ls = List Reactions in Channel
social.reaction.get = Get Details of Reaction
social.reaction.create = Post Reaction
social.reaction.update = Update Reaction
social.reaction.delete = Delete Reaction
social.reaction.schema = Show attributes/properties of Reaction
social.reaction.help = Show help on commands for Reaction


#################
# Document Store

documents = Document Store operations

## Document

documents.document = Document and Folder operations
documents.document.ls = List Documents in Folder
documents.document.get = Get Details or Content of Document
documents.document.create = Create Document
documents.document.update = Update Document
documents.document.delete = Delete Document
documents.document.schema = Show attributes/properties of Document
documents.document.help = Show help on commands for Document

## File Mounts

documents.fmount = File/Document Mount operations
documents.fmount.ls = List Mounts in Folder
documents.fmount.get = Get Details of Mount
documents.fmount.create = Create Mount
documents.fmount.update = Update Mount
documents.fmount.delete = Delete Mount
documents.fmount.schema = Show attributes/properties of Mount
documents.fmount.help = Show help on commands for Mount

#################
# Payments Gateway

payments = Payment Gateway operations

## Account

payments.account = Payment Account Operations
payments.account.ls = List Payment Accounts
payments.account.get = Get Details of Payment Accounts
payments.account.create = Create Payment Account
payments.account.update = Update Payment Account
payments.account.delete = Delete Payment Account
payments.account.schema = Show attributes/properties of Account
payments.account.help = Show help on commands for Account

## Payment

payments.payment = Payment Operations
payments.payment.ls = List Payments
payments.payment.get = Get Details of Payment
payments.payment.create = Submit a Payment
payments.payment.update = Update Payment
payments.payment.delete = Delete Payment
payments.payment.schema = Show attributes/properties of Payment
payments.payment.help = Show help on commands for Payment

## Tax

payments.tax = Tax Operations
payments.tax.ls = List Taxes
payments.tax.get = Get Details of Taxes
payments.tax.create = Create Tax
payments.tax.update = Update Tax
payments.tax.delete = Delete Tax
payments.tax.schema = Show attributes/properties of Tax
payments.tax.help = Show help on commands for Tax
